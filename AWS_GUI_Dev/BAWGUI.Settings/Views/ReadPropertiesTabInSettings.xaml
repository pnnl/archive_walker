<UserControl x:Class="ReadPropertiesTabInSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:BAWGUI.Settings.Converters"
             xmlns:vm="clr-namespace:BAWGUI.Settings.ViewModels"
             xmlns:coremodel="clr-namespace:BAWGUI.Core.Models;assembly=BAWGUI.Core"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:reader="clr-namespace:BAWGUI.ReadConfigXml;assembly=BAWGUI.ReadConfigXml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:utility="clr-namespace:BAWGUI.Utilities;assembly=BAWGUI.Utilities"
             xmlns:coreConverter="clr-namespace:BAWGUI.Core.Converters;assembly=BAWGUI.Core"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:EmptyHeaderConverter x:Key="EmptyHeaderConverter"/>
            <converters:EnumToStringConverter1 x:Key="EnumToStringConverter1"/>
            <converters:EnumToStringConverter2 x:Key="EnumToStringConverter2"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <coreConverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <converters:FileTypeToLabelConverter x:Key="FileTypeToLabelConverter"/>
            <!--<converters:FileTypeToRowNumberConverter1 x:Key="FileTypeToRowNumberConverter1"/>
            <converters:FileTypeToRowNumberConverter2 x:Key="FileTypeToRowNumberConverter2"/>
            <converters:FileTypeToRowNumberConverter3 x:Key="FileTypeToRowNumberConverter3"/>-->
            <converters:FileTypeToBooleanConverter x:Key="FileTypeToBooleanConverter"/>
            <converters:FileTypeToBackgroundConverter x:Key="FileTypeToBackgroundConverter"/>
            <converters:FileTypeToVisibilityConverter x:Key="FileTypeToVisibilityConverter"/>
            <converters:FileTypeToVisibilityInverseConverter x:Key="FileTypeToVisibilityInverseConverter"/>
            <coreConverter:InverseBooleanVisibilityConverter x:Key="InverseBooleanVisibilityConverter"/>
            <!--<converters:InputFileTypesToAvailableModeConverter x:Key="InputFileTypesToAvailableModeConverter"/>-->
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type utility:EnumerationManager}" x:Key="ModeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodel:ModeType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type utility:EnumerationManager}" x:Key="DataFileTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodel:DataFileType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <DataTemplate x:Key="ArchiveParameter">
                <GroupBox Header="Archive Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Start Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <!--<Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>-->
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom" Kind="Utc"/>
                            </StackPanel>
                            <!--<StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedStartTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>-->
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2,40,2,2">
                            <Label Content="End Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <!--<Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>-->
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeEnd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom" Kind="Utc"/>
                            </StackPanel>
                            <!--<StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedEndTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>-->
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate x:Key="RealTimeParameter">
                <GroupBox Header="Real-Time Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> UTC Offset of Data Timestamps </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.UTCoffset}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> (hours). </TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> When data beyond the expected file is not available, wait </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.NoFutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> seconds </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxNoFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> times before exiting. </TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> When data beyond the expected file is available, wait </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.FutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> seconds </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> times before skipping to the next available file. </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate x:Key="HybridParameter">
                <GroupBox Header="Hybrid Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> UTC Offset of Data Timestamps</TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.UTCoffset}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> (hours). </TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Start Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <!--<Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>-->
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom" Kind="Utc"/>
                            </StackPanel>
                            <!--<StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedStartTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>-->
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> When data beyond the expected file is not available, wait</TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.NoFutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> seconds</TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxNoFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> times before exiting.</TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> When data beyond the expected file is available, wait</TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.FutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center"> seconds</TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> times before skipping to the next available file.</TextBlock>
                        </StackPanel>
                        <!--<StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.NoFutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxNoFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.FutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>-->
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> Transition to real time mode when the processed files come within </TextBlock>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.RealTimeRange}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWithOverflow"> seconds of the current time. </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Border BorderBrush="Black" Margin="2" BorderThickness="0.5" Grid.Column="0">
            <ScrollViewer Margin="2">
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" LastChildFill="True" Margin="0,0,7,0">
                        <Button DockPanel.Dock="Right" Width="24" Height="24" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2,14,2,2" VerticalAlignment="Top" Command="{Binding AddFileSource}">
                            <Image Width="16" Height="16" Source="/BAWGUI.Settings;component/MyResources/AddCommand.png" />
                        </Button>
                        <Label Content="File Sources" Margin="2" FontSize="18" FontWeight="Bold"/>
                    </DockPanel>
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding DataConfigure.ReaderProperty.InputFileInfos}" Margin="2">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="LightGray" BorderThickness="1" Background="WhiteSmoke" Margin="2">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Expander Grid.Column="0" Header="{Binding Mnemonic, Converter={StaticResource EmptyHeaderConverter}, ConverterParameter='(New file source)'}" IsExpanded="{Binding IsExpanded}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,5,0,0">
                                                    <Label Content="File Type:" Margin="2" Width="100"/>
                                                    <!--<TextBox Text="{Binding FileType, Converter={StaticResource EnumToStringConverter1}}" Margin="2" VerticalAlignment="Center" MinWidth="200" IsReadOnly="True"/>-->
                                                    <ComboBox SelectedValue="{Binding FileType, Converter={StaticResource EnumToStringConverter1}}" Margin="2" VerticalAlignment="Center" MinWidth="200" ItemsSource="{Binding Source={StaticResource DataFileTypeValues}}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="SelectionChanged">
                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.FileTypeChanged}" CommandParameter="{Binding}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </ComboBox>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,5,0,0">
                                                    <Label Content="Example File:" Margin="2" Width="100"/>
                                                    <TextBox Text="{Binding ExampleFile, UpdateSourceTrigger=PropertyChanged}" Margin="2" VerticalAlignment="Center" MinWidth="100" MaxWidth="600" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.BrowseInputFileDir}" Margin="2" ToolTip="Browse Input Data Directory" Width="25" Height="25" CommandParameter="{Binding}">
                                                        <Image Source="/BAWGUI.Settings;component/MyResources/open.gif" Stretch="Uniform"/>
                                                    </Button>
                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.ReadExampleFile}" Margin="2" ToolTip="Update selected example file and settings" Height="25" CommandParameter="{Binding}" Content="Read File" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=UserControl, AncestorLevel=1, Mode=FindAncestor}, Path=DataContext.IsMatlabEngineRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor, AncestorLevel=1}, Path=DataContext.InspectRawSignal}" Margin="2" ToolTip="Inspect input signals from this example file" Height="25" CommandParameter="{Binding}" Content="Inspect Signals" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=UserControl, AncestorLevel=1, Mode=FindAncestor}, Path=DataContext.IsMatlabEngineRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                                                    <!--<Button Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.UpdateExampleFile}" CommandParameter="{Binding ExampleFile}" Margin="2" ToolTip="Update example file in Config.xml file" Height="25" Content="Update Example File" IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=UserControl, AncestorLevel=1, Mode=FindAncestor}, Path=DataContext.IsMatlabEngineRunning, Converter={StaticResource InverseBooleanConverter}}"/>-->
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,5,0,0">
                                                    <Label Content="File Directory:" Margin="2" Width="100"/>
                                                    <TextBox Text="{Binding FileDirectory, UpdateSourceTrigger=PropertyChanged}" Margin="2" VerticalAlignment="Center" MinWidth="200" IsReadOnly="True" Background="WhiteSmoke"/>
                                                    <!--<Button Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.BrowseInputFileDir}" Margin="2" ToolTip="Browse Input Data Directory" Width="25" Height="25" CommandParameter="{Binding}">
                                                        <Image Source="/BAWGUI.Settings;component/MyResources/open.gif" Stretch="Uniform"/>
                                                    </Button>-->
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="0,5,0,0">
                                                    <Label Content="{Binding FileType, Converter={StaticResource FileTypeToLabelConverter}}" Margin="2" Width="100"/>
                                                    <TextBox Text="{Binding Mnemonic, UpdateSourceTrigger=PropertyChanged}" Margin="2" VerticalAlignment="Center" MinWidth="200" IsReadOnly="{Binding FileType, Converter={StaticResource FileTypeToBooleanConverter}}" Background="{Binding FileType, Converter={StaticResource FileTypeToBackgroundConverter}}" Visibility="{Binding FileType, Converter={StaticResource FileTypeToVisibilityConverter}}"/>
                                                    <ComboBox ItemsSource="{Binding PresetList}" SelectedItem="{Binding Mnemonic}" Margin="2" VerticalAlignment="Center" MinWidth="200" Visibility="{Binding FileType, Converter={StaticResource FileTypeToVisibilityInverseConverter}}"/>
                                                </StackPanel>
                                            </Grid>
                                        </Expander>
                                        <Button Grid.Column="1" Width="24" Height="24" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.DeleteThisFileSource}" CommandParameter="{Binding}">
                                            <Image Width="16" Height="16" Source="/BAWGUI.Settings;component/MyResources/RemoveCommand_16x.png" HorizontalAlignment="Center"/>
                                        </Button>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" Visibility="{Binding DataConfigure.ReaderProperty.HasDBDataSource, Converter={StaticResource BooleanVisibilityConverter}}">
                        <Label Content="Example Time" Margin="2" FontSize="18" FontWeight="Bold"/>
                        <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ExampleTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="2,5,2,0" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom" Kind="Utc" Height="20" VerticalAlignment="Center"/>
                    </StackPanel>
                    <Label Content="Mode" Grid.Row="3" Margin="2" FontSize="18" FontWeight="Bold"/>
                    <ComboBox HorizontalAlignment="left" Width="200" Grid.Row="4" Text="{Binding DataConfigure.ReaderProperty.ModeName, Converter={StaticResource EnumToStringConverter2}}" Margin="10,2" MinWidth="200" ItemsSource="{Binding Source={StaticResource ModeValues}}"/>
                    <ContentControl Grid.Row="5" Content="{Binding}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="0">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ArchiveParameter}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="1">
                                        <Setter Property="ContentTemplate" Value="{StaticResource RealTimeParameter}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="2">
                                        <Setter Property="ContentTemplate" Value="{StaticResource HybridParameter}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="2">
                        <Label Content="Update Interval (sec):" FontSize="18" FontWeight="Bold"/>
                        <TextBox Text="{Binding DetectorConfigure.ResultUpdateInterval}"  Margin="5,2" Height="22" Width="120" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </ScrollViewer>
        </Border>
        <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext"/>
        <Border BorderBrush="Black" Margin="2" BorderThickness="0.5" Grid.Column="2">
            <ScrollViewer Margin="2">
                <!--<ItemsControl ItemsSource="{Binding DataConfigure.ReaderProperty.InputFileInfos}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Margin="2,0,0,10">
                                <StackPanel>
                                    <TextBlock Text="Input File Directory/ies" Margin="2"/>
                                    <TextBlock Text="{Binding FileDirectory, StringFormat=Directory ({0}) Content:}" Margin="2"/>
                                    <TreeView ItemsSource="{Binding InputFileTree}" MaxHeight="300" MinHeight="100" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" Margin="2">
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding SubFolders}">
                                                <Border BorderBrush="AliceBlue" BorderThickness="1">
                                                    <TextBlock Text="{Binding Name}"/>
                                                </Border>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>-->
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
