<UserControl x:Class="TunableFilterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BAWGUI.Settings"
             xmlns:vm="clr-namespace:BAWGUI.Settings.ViewModels"
             xmlns:converters="clr-namespace:BAWGUI.Settings.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:coreconverter="clr-namespace:BAWGUI.Core.Converters;assembly=BAWGUI.Core"
             xmlns:coremodels="clr-namespace:BAWGUI.Core.Models;assembly=BAWGUI.Core"
             xmlns:coreview="clr-namespace:BAWGUI.Core.Views;assembly=BAWGUI.Core"
             xmlns:utility="clr-namespace:BAWGUI.Utilities;assembly=BAWGUI.Utilities"
             xmlns:xtlkt="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ValueTypeConverter x:Key="ValueTypeConverter"/>
            <converters:ExpanderHeaderConverter x:Key="ExpanderHeaderConverter"/>
            <coreconverter:SelectionStatusBackgroundConverter x:Key="SelectionStatusBackgroundConverter"/>
            <converters:NewChannelVisibilityConverter x:Key="NewChannelVisibilityConverter"/>
            <converters:EnumToStringConverter4 x:Key="EnumToStringConverter4"/>
            <converters:EnumToStringConverter5 x:Key="EnumToStringConverter5"/>
            <converters:EnumToStringConverter6 x:Key="EnumToStringConverter6"/>
            <converters:EnumToStringConverter7 x:Key="EnumToStringConverter7"/>
            <coreconverter:EnumToStringConverter11 x:Key="EnumToStringConverter11"/>
            <converters:TunableFilterExpanderHeaderConverter x:Key="TunableFilterExpanderHeaderConverter"/>
            <converters:TunableFilterTypeVisibilityConverter x:Key="TunableFilterTypeVisibilityConverter"/>
            <converters:TunableFilterTypeVisibilityInverseConverter x:Key="TunableFilterTypeVisibilityInverseConverter"/>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type utility:EnumerationManager}" x:Key="InterpolateTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodels:InterpolateType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <!--<ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type vm:EnumerationManager}" x:Key="EndpointsTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodels:EndpointsType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type vm:EnumerationManager}" x:Key="HandleNaNTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodels:HandleNaNType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>-->
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type utility:EnumerationManager}" x:Key="TunableFilterTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodels:TunableFilterType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type utility:EnumerationManager}" x:Key="OutputSignalStorageTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="coremodels:OutputSignalStorageType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <DataTemplate x:Key="MultiRateOptionButtons">
                <StackPanel Orientation="Vertical" Margin="30,0,0,0">
                    <Button Content="Specify New Sampling Rate" Margin="2" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.MultirateParameterChoice}" CommandParameter="newrate"/>
                    <Button Content="Specify Upsampling/Downsampling Factors" Margin="2" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.MultirateParameterChoice}" CommandParameter="pqratio"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="MultiRateNewRateParameters">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Image Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>-->
                    <Label Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Sampling Rate (Samples/second)" HorizontalAlignment="Left"/>
                    <TextBox Grid.Column="2" Text="{Binding NewRate, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Margin="8"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="MultiRatePQParameters">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Image Grid.Row="0" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>-->
                    <Label Grid.Row="0" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="Upsampling Factor" HorizontalAlignment="Left"/>
                    <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding PElement}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Margin="8"/>
                    <!--<Image Grid.Row="1" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>-->
                    <Label Grid.Row="1" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="Downsampling Factor" HorizontalAlignment="Left"/>
                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding QElement}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Margin="8"/>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="ParameterTextBox">
                <TextBox Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ContentControl}}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Right" Margin="8" HorizontalAlignment="Center"/>
            </DataTemplate>
            <DataTemplate x:Key="ParameterCheckBox">
                <CheckBox IsChecked="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ContentControl}}" VerticalAlignment="Center" Margin="8" HorizontalAlignment="Center"/>
            </DataTemplate>
            <!--<DataTemplate x:Key="EndpointsCombobox">
                <ComboBox Margin="8" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Right" HorizontalAlignment="Center" ItemsSource="{Binding Source={StaticResource EndpointsTypeValues}}" Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource EnumToStringConverter5}}"/>
            </DataTemplate>
            <DataTemplate x:Key="HandleNaNCombobox">
                <ComboBox Margin="8" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Right" HorizontalAlignment="Center" ItemsSource="{Binding Source={StaticResource HandleNaNTypeValues}}" Text="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=ContentControl}, Converter={StaticResource EnumToStringConverter6}}"/>
            </DataTemplate>-->
            <DataTemplate x:Key="NameTypeUnitApproach1">
                <StackPanel Orientation="Vertical">
                    <Label Content="Name, Type, and Unit Selection" Margin="2" FontSize="18" FontWeight="Bold">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.ProcessConfigStepDeSelected}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Label>
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!--<Image Grid.Row="0" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>-->
                        <Label Grid.Row="0" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Unit" HorizontalAlignment="Left"/>
                        <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding ProcessConfigure.NameTypeUnitElement.NewUnit}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Left" Margin="8"/>
                        <!--<Image Grid.Row="1" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>-->
                        <Label Grid.Row="1" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Type" HorizontalAlignment="Left"/>
                        <TextBox Grid.Row="1" Grid.Column="2" Margin="8" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Left" Text="{Binding ProcessConfigure.NameTypeUnitElement.NewType}"/>
                    </Grid>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="NameTypeUnitApproach2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" LastChildFill="True" Margin="0,0,7,0">
                        <Button DockPanel.Dock="Right" Width="24" Height="24" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2,14,2,2" VerticalAlignment="Top" Command="{Binding AddNameTypeUnit}">
                            <Image Width="16" Height="16" Source="/BAWGUI.Settings;component/MyResources/AddCommand.png" />
                        </Button>
                        <Label Content="Name, Type, and Unit Selection" Margin="2" FontSize="18" FontWeight="Bold">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <!--<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.ProcessConfigStepDeSelected}"/>-->
                                    <!--<i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ContentControl, Mode=FindAncestor}, Path=DataContext.ProcessConfigStepDeSelected}"/>-->
                                    <i:InvokeCommandAction Command="{Binding ProcessConfigStepDeSelected}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Label>
                    </DockPanel>
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding ProcessConfigure.NameTypeUnitElement.NameTypeUnitPMUList}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="LightGray" BorderThickness="1" Background="{Binding IsStepSelected, Converter={StaticResource SelectionStatusBackgroundConverter}}" Margin="2">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.ProcessConfigStepSelected}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.ProcessConfigStepSelected}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid Margin="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="30"/>
                                        </Grid.ColumnDefinitions>
                                        <Expander Grid.Column="0" Header="{Binding Converter={StaticResource ExpanderHeaderConverter}}" IsExpanded="{Binding IsExpanded}">
                                            <Grid Margin="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Margin="20,2,2,2" Text="{Binding InputChannels.Count, StringFormat=Channels ({0}):}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"/>
                                                <coreview:FilterListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" DataContext="{Binding InputChannels}"/>
                                                <!--<ListView Margin="20,2,2,2" ItemsSource="{Binding InputChannels}" ScrollViewer.VerticalScrollBarVisibility="Auto" MaxHeight="150" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock>
                                                                <TextBlock.Text>
                                                                    <MultiBinding StringFormat=" PMU: {0},   Channel: {1}">
                                                                        <Binding Path="PMUName"/>
                                                                        <Binding Path="SignalName"/>
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>-->
                                                <!--<Image Grid.Row="2" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>-->
                                                <Label Grid.Row="2" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Signal Name" HorizontalAlignment="Left" IsEnabled="{Binding InputChannels.Count, Converter={StaticResource NewChannelVisibilityConverter}}"/>
                                                <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding NewChannel}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Left" Margin="8" IsEnabled="{Binding InputChannels.Count, Converter={StaticResource NewChannelVisibilityConverter}}"/>
                                                <!--<Image Grid.Row="3" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>-->
                                                <Label Grid.Row="4" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Unit" HorizontalAlignment="Left"/>
                                                <TextBox Grid.Row="4" Grid.Column="2" Margin="8" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Left" Text="{Binding NewUnit}"/>
                                                <!--<Image Grid.Row="4" Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" Value="0"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>-->
                                                <Label Grid.Row="3" Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="New Type" HorizontalAlignment="Left"/>
                                                <TextBox Grid.Row="3" Grid.Column="2" Margin="8" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Left" Text="{Binding NewType}"/>
                                            </Grid>
                                        </Expander>
                                        <Button Grid.Column="1" Width="24" Height="24" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=DataContext.DeleteNameTypeUnit}" CommandParameter="{Binding}">
                                            <Image Width="16" Height="16" Source="/BAWGUI.Settings;component/MyResources/RemoveCommand_16x.png" HorizontalAlignment="Center"/>
                                        </Button>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="RationalFilterParameters">
                <local:RationalFilterParameters/>
            </DataTemplate>
            <DataTemplate x:Key="HighPassFilterParameters">
                <local:HighPassFilterParameters/>
            </DataTemplate>
            <DataTemplate x:Key="LowPassFilterParameters">
                <local:LowPassFilterParameters/>
            </DataTemplate>
            <converters:ErrorStatusBorderColorConverter x:Key="ErrorStatusBorderColorConverter"/>
            <coreconverter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border BorderBrush="LightGray" BorderThickness="1" Background="{Binding IsStepSelected, Converter={StaticResource SelectionStatusBackgroundConverter}}" Margin="2">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.ProcessConfigStepSelected}" CommandParameter="{Binding}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="GotFocus">
                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.ProcessConfigStepSelected}" CommandParameter="{Binding}"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseLeftButtonUp">
                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.TextboxesLostFocus}" CommandParameter="{Binding}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Expander Grid.Column="0" IsExpanded="{Binding IsExpanded}">
            <Expander.Header>
                <DockPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=ActualWidth}">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource TunableFilterExpanderHeaderConverter}">
                                <Binding Path="StepCounter"/>
                                <Binding Path="Type"/>
                            </MultiBinding>
                            <!--<MultiBinding StringFormat="Step{0} - {1} {2}">
                                <Binding Path="StepCounter"/>
                                <Binding Path="Type"/>
                                <Binding Path="Name"/>
                            </MultiBinding>-->
                        </TextBlock.Text>
                    </TextBlock>
                    <Button DockPanel.Dock="Right"  Width="24" Height="24" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="0,0,30,0" VerticalAlignment="Center" HorizontalAlignment="Right" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.DeleteTunableFilterOrMultirate}" CommandParameter="{Binding}">
                        <Image Width="16" Height="16" Source="/BAWGUI.Settings;component/MyResources/RemoveCommand_16x.png" HorizontalAlignment="Center"/>
                    </Button>
                </DockPanel>
            </Expander.Header>
            <ScrollViewer HorizontalScrollBarVisibility="Auto" CanContentScroll="True" VerticalScrollBarVisibility="Hidden">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Margin="2" Grid.Column="0">
                        <StackPanel Orientation="Horizontal" Margin="2,0">
                            <Label Margin="15,0,0,0" Width="150" VerticalAlignment="Center" Content="Filter Type: " HorizontalAlignment="Left"/>
                            <ComboBox ItemsSource="{Binding Source={StaticResource TunableFilterTypeValues}}" Text="{Binding Type, Converter={StaticResource EnumToStringConverter7}}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="140" HorizontalContentAlignment="Right" Margin="-15,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2,0">
                            <Label Content="Output Signal Storage:" Margin="15,0,0,0" Width="150" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding Source={StaticResource OutputSignalStorageTypeValues}}" Text="{Binding OutputSignalStorage, Converter={StaticResource EnumToStringConverter11}}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="140" HorizontalContentAlignment="Right" Margin="-15,0,0,0" Visibility="{Binding Type, Converter={StaticResource TunableFilterTypeVisibilityConverter}}"/>
                            <TextBlock Margin="-15,0,0,0" VerticalAlignment="Center" Width="140" Visibility="{Binding Type, Converter={StaticResource TunableFilterTypeVisibilityInverseConverter}}">Custom PMU Only</TextBlock>
                            <!--<RadioButton GroupName="{Binding StepCounter}" Content="Create Custom PMU" IsChecked="{Binding UseCustomPMU}" Margin="2,0" VerticalAlignment="Center"/>
                            <RadioButton GroupName="{Binding StepCounter}" Content="Replace Input" IsChecked="{Binding UseCustomPMU, Converter={StaticResource InverseBooleanConverter}}" Margin="10,0" VerticalAlignment="Center"/>-->
                            <Label Margin="15,0,0,0" Width="85" VerticalAlignment="Center" Content="Custom PMU:" HorizontalAlignment="Left" ToolTip="{Binding ToolTip}" Visibility="{Binding UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}}"/>
                            <xtlkt:WatermarkTextBox Watermark="Enter PMU Name" ToolTip="Please enter custom PMU name" Text="{Binding CustPMUName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" HorizontalContentAlignment="Right" Margin="-5,0,0,0" Visibility="{Binding UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}}"/>
                        </StackPanel>
                        <!--<StackPanel Orientation="Horizontal" Margin="20,10,2,2" Visibility="{Binding UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}}">
                        </StackPanel>-->
                        <TextBlock Margin="22,10,2,2" Text="{Binding InputChannels.Count, StringFormat=Channels ({0}):}"/>
                        <!--<coreview:FilterListBox DataContext="{Binding InputChannels}"/>-->
                        <StackPanel Orientation="Horizontal" Margin="2,0">
                            <TextBlock Margin="30,0,0,0" Text="Input PMU:"/>
                            <TextBlock Margin="40,0,0,0" Text="Input Signal:"/>
                            <TextBlock Margin="150,0,0,0" Text="Custom Signal:" Visibility="{Binding UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}}"/>
                        </StackPanel>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="200" ScrollViewer.CanContentScroll="True">
                            <ItemsControl ItemsSource="{Binding OutputInputMappingPair}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <xtlkt:WatermarkTextBox Focusable="True" Name="PMU" Width="100" Text="{Binding Value[0].PMUName}" Margin="30,0,0,0" Height="25" IsReadOnly="True" GotFocus="TextBoxGotFocus" LostFocus="TextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.SetCurrentFocusedTextboxUnarySteps}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </xtlkt:WatermarkTextBox>
                                            <xtlkt:WatermarkTextBox Focusable="True" Name="Channel" Width="150" Text="{Binding Value[0].SignalName}" Margin="2,0,0,0" Height="25" IsReadOnly="True" GotFocus="TextBoxGotFocus" LostFocus="TextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.SetCurrentFocusedTextboxUnarySteps}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </xtlkt:WatermarkTextBox>
                                            <xtlkt:WatermarkTextBox Focusable="True" Name="CustName" Watermark="Enter Signal Name" ToolTip="Please enter custom signal name" Width="150" Height="25" GotFocus="TextBoxGotFocus" LostFocus="TextBoxLostFocus" Text="{Binding Key.SignalName}" Margin="70,0,0,0" Visibility="{Binding DataContext.UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl, AncestorLevel=1}}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="GotFocus">
                                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor, AncestorLevel=2}, Path=DataContext.SetCurrentFocusedTextboxUnarySteps}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </xtlkt:WatermarkTextBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                        <StackPanel Orientation="Horizontal">
                            <xtlkt:WatermarkTextBox Watermark="Enter PMU Name" ToolTip="Please select signal(s) from signal selection panel on the right" Style="{StaticResource NoItemsTextBoxStyle}" Width="100" Margin="30,0,0,0" IsReadOnly="True" GotFocus="TextBoxGotFocus" LostFocus="TextBoxLostFocus"/>
                            <xtlkt:WatermarkTextBox Watermark="Enter Signal Name" ToolTip="Please select signal(s) from signal selection panel on the right" Style="{StaticResource NoItemsTextBoxStyle}"  Width="150" Margin="2,0" IsReadOnly="True" GotFocus="TextBoxGotFocus" LostFocus="TextBoxLostFocus"/>
                            <xtlkt:WatermarkTextBox Watermark="Enter Signal Name" ToolTip="Please enter custom signal name" Width="150" Margin="70,0" Style="{StaticResource NoItemsTextBoxStyle}" Visibility="{Binding UseCustomPMU, Converter={StaticResource BooleanVisibilityConverter}}"/>
                        </StackPanel>
                    </StackPanel>
                    <ContentControl Content="{Binding}" Margin="2" Grid.Column="1">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="0">
                                        <Setter Property="ContentTemplate" Value="{StaticResource RationalFilterParameters}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="1">
                                        <Setter Property="ContentTemplate" Value="{StaticResource HighPassFilterParameters}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Type}" Value="2">
                                        <Setter Property="ContentTemplate" Value="{StaticResource LowPassFilterParameters}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <!--<ItemsControl ItemsSource="{Binding FilterParameters}" Margin="2" Grid.Column="1">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Source="/BAWGUI.Settings;component/MyResources/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                                                    <Image.Style>
                                                                        <Style TargetType="Image">
                                                                            <Style.Triggers>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" Value="0"/>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Image.Style>
                                                                </Image>
                                    <Label Grid.Column="1" Margin="0,2" Width="220" VerticalAlignment="Center" Content="{Binding ParameterName}" ContentStringFormat="{}{0}:" HorizontalAlignment="Left"/>
                                    <ContentControl Content="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" HorizontalAlignment="Center">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource ValueTypeConverter}}" Value="Boolean">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource ParameterCheckBox}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource ValueTypeConverter}}" Value="String">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource ParameterTextBox}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource ValueTypeConverter}}" Value="EndpointsType">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource EndpointsCombobox}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource ValueTypeConverter}}" Value="HandleNaNType">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource HandleNaNCombobox}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>-->
                </Grid>
            </ScrollViewer>
        </Expander>
    </Border>
</UserControl>
