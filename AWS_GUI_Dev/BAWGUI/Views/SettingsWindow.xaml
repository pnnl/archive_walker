<Window x:Class="SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:BAWGUI"
        mc:Ignorable="d"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        Title="SettingsWindow" Height="600" Width="1000">

    <Window.Resources>
        <ResourceDictionary>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type local:EnumerationManager}" x:Key="DataFileTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:DataFileType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type local:EnumerationManager}" x:Key="ModeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:ModeType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <local:EnumToStringConverter1 x:Key="EnumToStringConverter1"/>
            <local:EnumToStringConverter2 x:Key="EnumToStringConverter2"/>
            <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <local:ExpanderHeaderConverter x:Key="ExpanderHeaderConverter"/>
            <local:SelectionStatusBackgroundConverter x:Key="SelectionStatusBackgroundConverter"/>
            <local:SignalSignatureListStringConverter x:Key="SignalSignatureListStringConverter"/>
            <local:CurrentStepNameConverter x:Key="CurrentStepNameConverter"/>
            <DataTemplate x:Key="ArchiveParameter">
                <GroupBox Header="Archive Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Start Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeStart}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedStartTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2,40,2,2">
                            <Label Content="End Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeEnd}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedEndTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate x:Key="RealTimeParameter">
                <GroupBox Header="Real-Time Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.NoFutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxNoFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.FutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate x:Key="HybridParameter">
                <GroupBox Header="Hybrid Mode Parameters" BorderBrush="LightGray" BorderThickness="1" Margin="4,10">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Start Time" Width="150" Margin="2" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Vertical" Margin="2">
                                <Label Content="Select UTC Time" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.DateTimeStart}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="20,2">
                                <Label Content="Select Alternate Time Zone" Width="auto" Margin="2" HorizontalAlignment="Center"/>
                                <ComboBox ItemsSource="{Binding TimeZoneList}" Margin="2" SelectedItem="{Binding DataConfigure.ReaderProperty.SelectedTimeZone}"/>
                                <toolkit:DateTimePicker AutoCloseCalendar="True" Value="{Binding DataConfigure.ReaderProperty.ConvertedStartTime}" HorizontalAlignment="Right" Margin="2" MinWidth="170" HorizontalContentAlignment="Right" FormatString="MM/dd/yyyy HH:mm:ss" Format="Custom"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.NoFutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max No Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxNoFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.FutureWait}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Max Future Wait" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.MaxFutureCount}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <Label Content="Real Time Range" Width="220"/>
                            <TextBox Text="{Binding DataConfigure.ReaderProperty.RealTimeRange}" HorizontalAlignment="Right" Margin="8" Width="100" HorizontalContentAlignment="Right"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
            <DataTemplate x:Key="TreeViewCheckBox">
                <CheckBox IsChecked="{Binding SignalSignature.IsChecked}" Margin="2,0,5,0" CommandParameter="{Binding}" Command="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                <!--<CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.SelectedSelectionMethod, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" Value="OutPut Channels by Step">
                                    <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>-->
            </DataTemplate>
            <DataTemplate x:Key="TreeViewRadioButton">
                <RadioButton IsChecked="{Binding SignalSignature.IsChecked}" Margin="2,0,5,0" CommandParameter="{Binding}" Command="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" GroupName="GroupAll"/>
                <!--<RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=DataContext.SelectedSelectionMethod, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" Value="OutPut Channels by Step">
                                    <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>-->
            </DataTemplate>
            <DataTemplate x:Key="ParameterComboBox">
                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.AllPMUs}" SelectedValue="{Binding Value}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" Margin="8" HorizontalContentAlignment="Left"/>
            </DataTemplate>
            <DataTemplate x:Key="ParameterTextBox">
                <TextBox Text="{Binding Value}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" HorizontalContentAlignment="Right" Margin="8"/>
            </DataTemplate>
            <DataTemplate x:Key="ScalarRepCustomization">
                <StackPanel Orientation="Vertical" Margin="2">
                    <Label Content="Parameters:" Margin="2"/>
                    <StackPanel Orientation="Horizontal">
                        <Image Grid.Column="0" Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Label Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="CustPMUname" HorizontalAlignment="Left" ToolTip="{Binding ToolTip}"/>
                        <TextBox Text="{Binding CustPMUname}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" HorizontalContentAlignment="Right" Margin="8"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Image Grid.Column="0" Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Label Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="SignalName" HorizontalAlignment="Left" ToolTip="{Binding ToolTip}"/>
                        <TextBox Text="{Binding OutputChannels[0].SignalName}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="150" HorizontalContentAlignment="Right" Margin="8"/>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding Parameters}" Margin="2">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Label Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="{Binding ParameterName}" HorizontalAlignment="Left" ToolTip="{Binding ToolTip}"/>
                                    <ContentControl Content="{Binding}" HorizontalAlignment="Left" Grid.Column="2">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Setter Property="ContentTemplate" Value="{StaticResource ParameterTextBox}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ParameterName}" Value="TimeSourcePMU">
                                                        <Setter Property="ContentTemplate" Value="{StaticResource ParameterComboBox}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="AdditionCustomization">
                <local:AdditionCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="SubtractionCustomization">
                <local:SubtractionCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="MultiplicationCustomization">
                <local:MultiplicationCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="DivisionCustomization">
                <local:DivisionCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="ExponentCustomization">
                <local:ExponentCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="UnaryCustomization">
                <local:UnaryCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="CreatePhasorCustomization">
                <local:CreatePhasorCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="PowerCalculationsCustomization">
                <local:PowerCalculationsCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="SpecifySignalTypeUnitCustomization">
                <local:SpecifySignalTypeUnitCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="MetricPrefixCustomization">
                <local:MetricPrefixCustomization/>
            </DataTemplate>
            <DataTemplate x:Key="AngleConversionCustomization">
                <local:AngleConversionCustomization/>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="2">
            <Label Content="Config File:" />
            <TextBox Text="{Binding ConfigFileName}" MinWidth="100" Margin="2"/>
            <Button ToolTip="Open Config File" Width="25" Height="25" Margin="2" Command="{Binding OpenConfigFile}">
                <Image Source="../Images/open.gif" Stretch="Uniform"/>
            </Button>
            <Button ToolTip="Save Config File" Width="25" Height="25" Margin="2">
                <Image Source="../Images/Save24.png" Stretch="None"/>
            </Button>
            <Button ToolTip="Delete Config File" Width="25" Height="25" Margin="2">
                <Image Source="../Images/delete.bmp" Stretch="None"/>
            </Button>
        </StackPanel>
        <avalonDock:DockingManager Grid.Row="1" Margin="2" Name="dockManager">
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel>
                    <avalonDock:LayoutDocumentPane DockMinWidth="100">
                        <avalonDock:LayoutAnchorable Title="Reader Properties" CanClose="False" CanHide="False" CanAutoHide="True">
                            <avalonDock:DockingManager AllowMixedOrientation="True">
                                <avalonDock:LayoutRoot>
                                    <avalonDock:LayoutPanel Orientation="Horizontal">
                                        <avalonDock:LayoutAnchorablePane DockWidth="800">
                                            <avalonDock:LayoutAnchorable CanHide="False" CanClose="False" AutoHideWidth="240">
                                                <ScrollViewer>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="Auto"></RowDefinition>
                                                        </Grid.RowDefinitions>
                                                        <DockPanel Grid.Row="0" LastChildFill="True" Margin="0,0,7,0">
                                                            <Button DockPanel.Dock="Right" Width="25" Height="25" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" Command="{Binding AddFileSource}">
                                                                <Image Source="../Images/CircledPlus.png" Stretch="Uniform"/>
                                                            </Button>
                                                            <Label Content="File Sources" Grid.Row="0" Grid.Column="0" Margin="2" FontSize="18" FontWeight="Bold"/>
                                                        </DockPanel>
                                                        <ItemsControl Grid.Row="1" ItemsSource="{Binding DataConfigure.ReaderProperty.InputFileInfos}" Margin="2">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Border BorderBrush="LightGray" BorderThickness="1" Background="WhiteSmoke" Margin="2">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="30"/>                                                                                
                                                                            </Grid.ColumnDefinitions>
                                                                            <Expander Grid.Column="0" Header="{Binding Mnemonic}">
                                                                                <Grid>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                        <RowDefinition Height="Auto"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,5,0,0">
                                                                                        <Label Content="File Directory:" Margin="2" Width="100"/>
                                                                                        <TextBox Text="{Binding FileDirectory}" Margin="2" VerticalAlignment="Center" MinWidth="200"/>
                                                                                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.BrowseInputFileDir}" Margin="2" ToolTip="Browse Input Data Directory" Width="25" Height="25" CommandParameter="{Binding}">
                                                                                            <Image Source="../Images/open.gif" Stretch="Uniform"/>
                                                                                        </Button>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,5,0,0">
                                                                                        <Label Content="File Type:" Margin="2" Width="100"/>
                                                                                        <ComboBox SelectedValue="{Binding FileType, Converter={StaticResource EnumToStringConverter1}}" Margin="2" VerticalAlignment="Center" MinWidth="200" ItemsSource="{Binding Source={StaticResource DataFileTypeValues}}">
                                                                                            <i:Interaction.Triggers>
                                                                                                <i:EventTrigger EventName="SelectionChanged">
                                                                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.FileTypeChanged}" CommandParameter="{Binding}"/>
                                                                                                </i:EventTrigger>
                                                                                            </i:Interaction.Triggers>
                                                                                        </ComboBox>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,5,0,0">
                                                                                        <Label Content="Mnemonic:" Margin="2" Width="100"/>
                                                                                        <TextBox Text="{Binding Mnemonic}" Margin="2" VerticalAlignment="Center" MinWidth="200"/>
                                                                                    </StackPanel>
                                                                                </Grid>
                                                                            </Expander>
                                                                            <Button Grid.Column="1" Width="25" Height="25" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DeleteThisFileSource}" CommandParameter="{Binding}">
                                                                                <Image Source="../Images/CircledMinus.png" HorizontalAlignment="Stretch"/>
                                                                            </Button>
                                                                        </Grid>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                        <Label Content="Mode" Grid.Row="3" Grid.Column="2" Margin="2" FontSize="18" FontWeight="Bold"/>
                                                        <ComboBox HorizontalAlignment="left" Width="200" Grid.Row="4" Text="{Binding DataConfigure.ReaderProperty.ModeName, Converter={StaticResource EnumToStringConverter2}}" Margin="2" MinWidth="200" ItemsSource="{Binding Source={StaticResource ModeValues}}"/>
                                                        <ContentControl Grid.Row="5" Content="{Binding}">
                                                            <ContentControl.Style>
                                                                <Style TargetType="ContentControl">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="0">
                                                                            <Setter Property="ContentTemplate" Value="{StaticResource ArchiveParameter}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="1">
                                                                            <Setter Property="ContentTemplate" Value="{StaticResource RealTimeParameter}"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataConfigure.ReaderProperty.ModeName}" Value="2">
                                                                            <Setter Property="ContentTemplate" Value="{StaticResource HybridParameter}"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ContentControl.Style>
                                                        </ContentControl>
                                                    </Grid>
                                                </ScrollViewer>
                                            </avalonDock:LayoutAnchorable>
                                        </avalonDock:LayoutAnchorablePane>
                                        <avalonDock:LayoutDocumentPane DockWidth="200">
                                            <avalonDock:LayoutAnchorable  Title="Input File Directory" CanAutoHide="False" CanClose="False" CanFloat="False">
                                                <ScrollViewer>
                                                    <ItemsControl ItemsSource="{Binding DataConfigure.ReaderProperty.InputFileInfos}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border Margin="0,0,0,10">
                                                                    <StackPanel>
                                                                        <TextBlock Text="{Binding FileDirectory, StringFormat=Directory ({0}) Content:}" Margin="2"/>
                                                                        <TreeView ItemsSource="{Binding InputFileTree}" MaxHeight="300" MinHeight="100" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                                            <TreeView.ItemTemplate>
                                                                                <HierarchicalDataTemplate ItemsSource="{Binding SubFolders}">
                                                                                    <Border BorderBrush="AliceBlue" BorderThickness="1">
                                                                                        <TextBlock Text="{Binding Name}"/>
                                                                                    </Border>
                                                                                </HierarchicalDataTemplate>
                                                                            </TreeView.ItemTemplate>
                                                                        </TreeView>
                                                                    </StackPanel>
                                                                </Border>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </ScrollViewer>
                                            </avalonDock:LayoutAnchorable>
                                        </avalonDock:LayoutDocumentPane>
                                    </avalonDock:LayoutPanel>
                                </avalonDock:LayoutRoot>
                            </avalonDock:DockingManager>
                        </avalonDock:LayoutAnchorable>
                        <avalonDock:LayoutAnchorable Title="Signal Selection and Manipulation" CanClose="False" CanHide="False" CanAutoHide="True">
                            <avalonDock:DockingManager>
                                <avalonDock:LayoutRoot>
                                    <avalonDock:LayoutPanel Orientation="Horizontal">
                                        <avalonDock:LayoutAnchorablePane DockMinWidth="1000">
                                            <avalonDock:LayoutAnchorable>
                                                <ScrollViewer>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="auto"/>
                                                            <RowDefinition Height="auto"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid Grid.Row="0" Margin="2">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepDeSelected}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="50"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Label Content="Signal Selection and Manipulation Steps" Grid.Column="0" Margin="2" FontSize="18" FontWeight="Bold"/>
                                                            <Menu Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Grid.Column="1" Margin="0">
                                                                <MenuItem HorizontalAlignment="Right" Width="50" Margin="0">
                                                                    <MenuItem.Header>
                                                                        <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Right">
                                                                            <Image Width="19" Height="19" Source="../Images/CircledPlus.png" HorizontalAlignment="Right" Margin="0"/>
                                                                            <Path VerticalAlignment="Center" Margin="4,4,0,0" Fill="Black" Data="M 0 0 L 4 4 L 8 0 Z" HorizontalAlignment="Right"/>
                                                                        </StackPanel>
                                                                    </MenuItem.Header>
                                                                    <MenuItem Header="Filter" ItemsSource="{Binding DataConfigure.DQFilterList}">
                                                                        <MenuItem.ItemContainerStyle>
                                                                            <Style>
                                                                                <Setter Property="MenuItem.Command" Value="{Binding Path=DataContext.DQFilterSelected, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"/>
                                                                                <Setter Property="MenuItem.CommandParameter" Value="{Binding}"/>
                                                                            </Style>
                                                                        </MenuItem.ItemContainerStyle>
                                                                    </MenuItem>
                                                                    <MenuItem Header="Customization" ItemsSource="{Binding DataConfigure.CustomizationList}">
                                                                        <MenuItem.ItemContainerStyle>
                                                                            <Style>
                                                                                <Setter Property="MenuItem.Command" Value="{Binding Path=DataContext.CustomizationSelected, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"/>
                                                                                <Setter Property="MenuItem.CommandParameter" Value="{Binding}"/>
                                                                            </Style>
                                                                        </MenuItem.ItemContainerStyle>
                                                                    </MenuItem>
                                                                </MenuItem>
                                                            </Menu>
                                                        </Grid>
                                                        <ItemsControl ItemsSource="{Binding DataConfigure.CollectionOfSteps}" Grid.Row="1" Margin="2">
                                                            <ItemsControl.Resources>                                                                
                                                                <DataTemplate DataType="{x:Type local:DQFilter}">
                                                                    <Border Margin="2,2,11,2" BorderBrush="LightGray" BorderThickness="1" Background="{Binding IsStepSelected, Converter={StaticResource SelectionStatusBackgroundConverter}}">
                                                                        <i:Interaction.Triggers>
                                                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepSelected}" CommandParameter="{Binding}"/>
                                                                            </i:EventTrigger>
                                                                            <i:EventTrigger EventName="GotFocus">
                                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepSelected}" CommandParameter="{Binding}"/>
                                                                            </i:EventTrigger>
                                                                        </i:Interaction.Triggers>
                                                                        <Grid Margin="2">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="30"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Expander Grid.Column="0" Header="{Binding Converter={StaticResource ExpanderHeaderConverter}}">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="6*"/>
                                                                                        <ColumnDefinition Width="4*"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <StackPanel Orientation="Vertical" Margin="2" Grid.Column="0">
                                                                                        <TextBlock Margin="20,2,2,2" Text="{Binding InputChannels.Count, StringFormat=Channels ({0}):}"/>
                                                                                        <ListView Margin="20,2,2,2" ItemsSource="{Binding InputChannels}" ScrollViewer.VerticalScrollBarVisibility="Auto" MaxHeight="150" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                                                                            <ListView.ItemTemplate>
                                                                                                <DataTemplate>
                                                                                                    <TextBlock Text="{Binding Path=SignalName}" Margin="2,0"/>
                                                                                                </DataTemplate>
                                                                                            </ListView.ItemTemplate>
                                                                                        </ListView>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Vertical" Margin="2" Grid.Column="1">
                                                                                        <Label Content="Parameters:" Margin="2"/>
                                                                                        <ItemsControl ItemsSource="{Binding Parameters}" Margin="2">
                                                                                            <ItemsControl.ItemTemplate>
                                                                                                <DataTemplate>
                                                                                                    <Grid>
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition Width="Auto"/>
                                                                                                            <ColumnDefinition Width="Auto"/>
                                                                                                            <ColumnDefinition Width="*"/>
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        <Image Grid.Column="0" Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="2,12,0,0" HorizontalAlignment="Right">
                                                                                                            <Image.Style>
                                                                                                                <Style TargetType="Image">
                                                                                                                    <Style.Triggers>
                                                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                                                            <Setter Property="Opacity" Value="0"/>
                                                                                                                        </Trigger>
                                                                                                                    </Style.Triggers>
                                                                                                                </Style>
                                                                                                            </Image.Style>
                                                                                                        </Image>
                                                                                                        <Label Grid.Column="1" Margin="0,2" Width="120" VerticalAlignment="Center" Content="{Binding ParameterName}" HorizontalAlignment="Left"/>
                                                                                                        <ContentPresenter Content="{Binding Value}" HorizontalAlignment="Right" Grid.Column="2">
                                                                                                            <ContentPresenter.Resources>
                                                                                                                <DataTemplate DataType="{x:Type sys:Boolean}">
                                                                                                                    <CheckBox IsChecked="{Binding Path=.}" VerticalAlignment="Center" Margin="8" HorizontalAlignment="Right"/>
                                                                                                                </DataTemplate>
                                                                                                                <DataTemplate DataType="{x:Type sys:String}">
                                                                                                                    <TextBox Text="{Binding Path=.}" VerticalAlignment="Center" VerticalContentAlignment="Center" Width="100" HorizontalContentAlignment="Right" Margin="8"/>
                                                                                                                    <!--<TextBlock Text="{Binding Path=.}" VerticalAlignment="Center" Width="100" Margin="8"/>-->
                                                                                                                </DataTemplate>
                                                                                                            </ContentPresenter.Resources>
                                                                                                        </ContentPresenter>
                                                                                                    </Grid>
                                                                                                </DataTemplate>
                                                                                            </ItemsControl.ItemTemplate>
                                                                                        </ItemsControl>
                                                                                    </StackPanel>
                                                                                </Grid>
                                                                            </Expander>
                                                                            <Button Grid.Column="1" Width="25" Height="25" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DeleteThisStep}" CommandParameter="{Binding}">
                                                                                <Image Source="../Images/CircledMinus.png" HorizontalAlignment="Stretch"/>
                                                                            </Button>
                                                                        </Grid>
                                                                    </Border>
                                                                </DataTemplate>
                                                                <DataTemplate DataType="{x:Type local:Customization}">
                                                                    <Border Name="StepBorder" Margin="2,2,11,2" BorderBrush="LightGray" BorderThickness="1" Background="{Binding IsStepSelected, Converter={StaticResource SelectionStatusBackgroundConverter}}">
                                                                        <i:Interaction.Triggers>
                                                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepSelected}" CommandParameter="{Binding}"/>
                                                                            </i:EventTrigger>
                                                                            <i:EventTrigger EventName="GotFocus">
                                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepSelected}" CommandParameter="{Binding}"/>
                                                                            </i:EventTrigger>
                                                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.TextboxesLostFocus}" CommandParameter="{Binding ElementName=Steps, Path=DataContext}"/>
                                                                            </i:EventTrigger>
                                                                        </i:Interaction.Triggers>
                                                                        <Grid Margin="2">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="30"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Expander Grid.Column="0" Header="{Binding Converter={StaticResource ExpanderHeaderConverter}}">
                                                                                <ContentControl Content="{Binding}" Name="Steps">
                                                                                    <ContentControl.Style>
                                                                                        <Style TargetType="ContentControl">
                                                                                            <Style.Triggers>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Scalar Repetition Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ScalarRepCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Addition Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource AdditionCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Subtraction Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource SubtractionCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Multiplication Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource MultiplicationCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Division Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource DivisionCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Raise signals to an exponent">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ExponentCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Reverse sign of signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Take absolute value of signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Return real component of signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Return imaginary component of signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Return angle of complex valued signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Take complex conjugate of signals">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UnaryCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Phasor Creation Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource CreatePhasorCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Power Calculation Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource PowerCalculationsCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Specify Signal Type and Unit Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource SpecifySignalTypeUnitCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Metric Prefix Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource MetricPrefixCustomization}"/>
                                                                                                </DataTrigger>
                                                                                                <DataTrigger Binding="{Binding Name}" Value="Angle Conversion Customization">
                                                                                                    <Setter Property="ContentTemplate" Value="{StaticResource AngleConversionCustomization}"/>
                                                                                                </DataTrigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </ContentControl.Style>
                                                                                </ContentControl>
                                                                            </Expander>
                                                                            <Button Grid.Column="1" Width="25" Height="25" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="2" VerticalAlignment="Top" HorizontalAlignment="Left" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DeleteThisStep}" CommandParameter="{Binding}">
                                                                                <Image Source="../Images/CircledMinus.png" HorizontalAlignment="Stretch"/>
                                                                            </Button>
                                                                        </Grid>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </ItemsControl.Resources>
                                                        </ItemsControl>
                                                        <Border Grid.Row="2" Margin="2">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.StepDeSelected}"/>
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                            <TextBlock>                </TextBlock>
                                                        </Border>
                                                    </Grid>
                                                </ScrollViewer>
                                            </avalonDock:LayoutAnchorable>
                                        </avalonDock:LayoutAnchorablePane>
                                        <avalonDock:LayoutPanel Orientation="Vertical">
                                            <avalonDock:LayoutAnchorablePane DockMinWidth="200">
                                                <avalonDock:LayoutAnchorable Title="Select Signal by Signal Type">
                                                    <TreeView ItemsSource="{Binding GroupedSignalsByType}">
                                                        <TreeView.ItemTemplate>
                                                            <HierarchicalDataTemplate ItemsSource="{Binding SignalList}">
                                                                <StackPanel Orientation="Horizontal" Margin="0">
                                                                    <CheckBox IsChecked="{Binding SignalSignature.IsChecked}" IsEnabled="{Binding SignalSignature.IsEnabled}" Margin="2,0,5,0" Command="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
                                                                    <TextBlock Text="{Binding SignalSignature.SignalName}" Margin="0"/>                                                                    
                                                                </StackPanel>
                                                            </HierarchicalDataTemplate>
                                                        </TreeView.ItemTemplate>
                                                        <TreeView.ItemContainerStyle>
                                                            <Style TargetType="{x:Type TreeViewItem}">
                                                                <Setter Property="IsEnabled" Value="{Binding SignalSignature.IsEnabled}"/>
                                                            </Style>
                                                        </TreeView.ItemContainerStyle>
                                                    </TreeView>
                                                </avalonDock:LayoutAnchorable>
                                            </avalonDock:LayoutAnchorablePane>
                                            <avalonDock:LayoutAnchorablePane DockMinWidth="200">
                                                <avalonDock:LayoutAnchorable Title="Select Signal by PMU">
                                                    <TreeView ItemsSource="{Binding GroupedSignalsByPMU}">
                                                        <TreeView.ItemTemplate>
                                                            <HierarchicalDataTemplate ItemsSource="{Binding SignalList}">
                                                                <StackPanel Orientation="Horizontal" Margin="0">
                                                                    <CheckBox IsChecked="{Binding SignalSignature.IsChecked}" Margin="2,0,5,0" Command="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
                                                                    <TextBlock Text="{Binding SignalSignature.SignalName}" Margin="0"/>
                                                                </StackPanel>
                                                            </HierarchicalDataTemplate>
                                                            <!--<HierarchicalDataTemplate ItemsSource="{Binding Value}">
                                                                <StackPanel Orientation="Horizontal">
                                                                    <CheckBox IsChecked="{Binding IsChecked}" Margin="2,0,5,0"/>
                                                                    <TextBlock Text="{Binding Key}" Margin="0"/>
                                                                </StackPanel>
                                                                <HierarchicalDataTemplate.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <CheckBox IsChecked="{Binding IsChecked}" Margin="2,0,5,0"/>
                                                                            <TextBlock Text="{Binding SignalName}" Margin="0"/>
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </HierarchicalDataTemplate.ItemTemplate>
                                                            </HierarchicalDataTemplate>-->
                                                        </TreeView.ItemTemplate>
                                                        <TreeView.ItemContainerStyle>
                                                            <Style TargetType="{x:Type TreeViewItem}">
                                                                <Setter Property="IsEnabled" Value="{Binding SignalSignature.IsEnabled}"/>
                                                            </Style>
                                                        </TreeView.ItemContainerStyle>
                                                    </TreeView>
                                                </avalonDock:LayoutAnchorable>
                                            </avalonDock:LayoutAnchorablePane>
                                        </avalonDock:LayoutPanel>
                                        <avalonDock:LayoutAnchorablePane>
                                            <avalonDock:LayoutAnchorable Title="Signal Selection Panel">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"/>
                                                        <RowDefinition Height="auto"/>
                                                        <!--<RowDefinition Height="auto"/>-->
                                                        <RowDefinition Height="*"/>
                                                        <!--<RowDefinition Height="auto"/>-->
                                                    </Grid.RowDefinitions>
                                                    <Label Grid.Row="0" Content="{Binding CurrentSelectedStep, Converter={StaticResource ExpanderHeaderConverter}}" ContentStringFormat="Pick Channels for: {0}"/>
                                                    <!--<TextBlock Grid.Row="0" Text="{Binding CurrentSelectedStep, Converter={StaticResource ExpanderHeaderConverter}, StringFormat=Pick Channels for: {0}}"/>-->
                                                    <ComboBox Name="signalGroupMethodCombobox" Grid.Row="1" ItemsSource="{Binding SelectSignalMethods}" SelectedValue="{Binding SelectedSelectionMethod}" Margin="2"/>
                                                    <TreeView Grid.Row="2" Margin="2" Visibility="{Binding SignalSelectionTreeViewVisibility}">
                                                        <TreeView.Style>
                                                            <Style TargetType="{x:Type TreeView}">
                                                                <Setter Property="ItemsSource" Value="{Binding GroupedSignalsByType}"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding SelectedSelectionMethod}" Value="All Raw Input Channels by Signal Type">
                                                                        <Setter Property="ItemsSource" Value="{Binding GroupedSignalsByType}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding SelectedSelectionMethod}" Value="All Raw Input Channels by PMU">
                                                                        <Setter Property="ItemsSource" Value="{Binding GroupedSignalsByPMU}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding SelectedSelectionMethod}" Value="Input Channels by Step">
                                                                        <Setter Property="ItemsSource" Value="{Binding GroupedSignalByStepsInput}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding SelectedSelectionMethod}" Value="OutPut Channels by Step">
                                                                        <Setter Property="ItemsSource" Value="{Binding GroupedSignalByStepsOutput}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TreeView.Style>
                                                        <TreeView.ItemTemplate>
                                                            <HierarchicalDataTemplate ItemsSource="{Binding SignalList}">
                                                                <StackPanel Orientation="Horizontal" Margin="0">
                                                                    <ContentControl Content="{Binding}">
                                                                        <ContentControl.Style>
                                                                            <Style TargetType="ContentControl">
                                                                                <Setter Property="ContentTemplate" Value="{StaticResource TreeViewCheckBox}"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.CurrentSelectedStep, Converter={StaticResource CurrentStepNameConverter}}" Value="Subtraction Customization">
                                                                                        <Setter Property="ContentTemplate" Value="{StaticResource TreeViewRadioButton}"/>
                                                                                    </DataTrigger>
                                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.CurrentSelectedStep, Converter={StaticResource CurrentStepNameConverter}}" Value="Division Customization">
                                                                                        <Setter Property="ContentTemplate" Value="{StaticResource TreeViewRadioButton}"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </ContentControl.Style>
                                                                    </ContentControl>
                                                                    <!--<CheckBox IsChecked="{Binding SignalSignature.IsChecked}" Margin="2,0,5,0" CommandParameter="{Binding}" Command="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}">
                                                                        --><!--<CheckBox.Style>
                                                                            <Style TargetType="{x:Type CheckBox}">
                                                                                <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding Path=DataContext.SelectedSelectionMethod, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" Value="OutPut Channels by Step">
                                                                                        <Setter Property="Command" Value="{Binding Path=DataContext.SelectedSignalChanged, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </CheckBox.Style>--><!--
                                                                    </CheckBox>-->
                                                                    <TextBlock Text="{Binding SignalSignature.SignalName}" Margin="0"/>
                                                                </StackPanel>
                                                            </HierarchicalDataTemplate>
                                                        </TreeView.ItemTemplate>
                                                        <TreeView.ItemContainerStyle>
                                                            <Style TargetType="{x:Type TreeViewItem}">
                                                                <Setter Property="IsEnabled" Value="{Binding SignalSignature.IsEnabled}"/>
                                                            </Style>
                                                        </TreeView.ItemContainerStyle>
                                                    </TreeView>
                                                    <!--<Button Grid.Row="3" Content="add selected signals" Command="{Binding AddSelectedSignalToStep}"/>-->
                                                </Grid>
                                            </avalonDock:LayoutAnchorable>
                                        </avalonDock:LayoutAnchorablePane>
                                    </avalonDock:LayoutPanel>
                                </avalonDock:LayoutRoot>
                            </avalonDock:DockingManager>
                        </avalonDock:LayoutAnchorable>
                        <avalonDock:LayoutAnchorable Title="Process Config" CanClose="False" CanHide="False" CanAutoHide="True">

                        </avalonDock:LayoutAnchorable>
                        <avalonDock:LayoutAnchorable Title="Post-Processing Customization" CanClose="False" CanHide="False" CanAutoHide="True">

                        </avalonDock:LayoutAnchorable>
                        <avalonDock:LayoutAnchorable Title="Detector Config" CanClose="False" CanHide="False" CanAutoHide="True">

                        </avalonDock:LayoutAnchorable>
                    </avalonDock:LayoutDocumentPane>
                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>
        <StackPanel Orientation="Vertical" Margin="2" Grid.Row="2">
            <Label Content="Log Messages:"/>
            <ListBox ItemsSource="{Binding Logs}" Margin="2" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" MaxHeight="100"/>
        </StackPanel>
    </Grid>
</Window>
