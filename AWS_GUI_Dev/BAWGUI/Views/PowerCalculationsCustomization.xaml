<UserControl x:Class="PowerCalculationsCustomization"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BAWGUI"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type local:EnumerationManager}" x:Key="PowerTypeValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:PowerType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <local:EnumToStringConverter3 x:Key="EnumToStringConverter3"/>
            <local:ErrorStatusBorderColorConverter x:Key="ErrorStatusBorderColorConverter"/>
            <DataTemplate x:Key="PhasorToPower">
                <StackPanel Orientation="Vertical">
                    <TextBlock Margin="30,2,0,2" Text="Vphasor: "/>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="VphasorPMU" Width="150" Text="{Binding Path=Value[0].PMUName}" Margin="30,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[0]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="VphasorChannel" Width="150" Text="{Binding Path=Value[0].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[0]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                    <TextBlock Margin="30,2,2,2" Text="Iphasor: "/>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="IphasorPMU" Width="150" Text="{Binding Path=Value[1].PMUName}" Margin="30,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[1].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[1]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="IphasorChannel" Width="150" Text="{Binding Path=Value[1].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[1].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[1]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="VIToPower">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="30,2,0,2" Text="Vmag: "/>
                        <TextBlock Margin="330,2,2,2" Text="Vang: "/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="VmagPMU" Width="150" Text="{Binding Path=Value[0].PMUName}" Margin="30,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[0]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="VmagChannel" Width="150" Text="{Binding Path=Value[0].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[0].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[0]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="VangPMU" Width="150" Text="{Binding Path=Value[1].PMUName}" Margin="45,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[1].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[1]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="VangChannel" Width="150" Text="{Binding Path=Value[1].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="VTextBoxGotFocus" LostFocus="VTextBoxLostFocus" BorderBrush="{Binding Path=Value[1].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[1]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="30,2,2,2" Text="Imag: "/>
                        <TextBlock Margin="330,2,2,2" Text="Iang: "/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Name="ImagPMU" Width="150" Text="{Binding Path=Value[2].PMUName}" Margin="30,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[2].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[2]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="ImagChannel" Width="150" Text="{Binding Path=Value[2].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[2].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[2]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="IangPMU" Width="150" Text="{Binding Path=Value[3].PMUName}" Margin="45,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[3].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[3]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <TextBox Name="IangChannel" Width="150" Text="{Binding Path=Value[3].SignalName}" Margin="20,0,0,0" IsReadOnly="True" GotFocus="ITextBoxGotFocus" LostFocus="ITextBoxLostFocus" BorderBrush="{Binding Path=Value[3].IsValid, Converter={StaticResource ErrorStatusBorderColorConverter}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.PowerPhasorTextBoxGotFocus}" CommandParameter="{Binding Path=Value[3]}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="OptionButtons">
                <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                    <Button Content="Add phasor signals" Margin="2" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ChoosePhasorForPowerCalculation}"/>
                    <Button Content="Add magnitude and angle signals" Margin="2" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ChooseMagAngForPowerCalculation}"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical" Margin="2" Name="StepPanel">
        <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
            <Image Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="0,5,0,0" HorizontalAlignment="Right">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Label Margin="0,0,0,0" Width="Auto" VerticalAlignment="Center" Content="PowType: " HorizontalAlignment="Left" ToolTip="{Binding ToolTip}"/>
            <ComboBox Width="80" Height="22" Text="{Binding PowType, Converter={StaticResource EnumToStringConverter3}}" Margin="0,0,20,0" ItemsSource="{Binding Source={StaticResource PowerTypeValues}}"/>
            <Image Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="0,5,0,0" HorizontalAlignment="Right">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Label Margin="0,0,0,0" Width="Auto" VerticalAlignment="Center" Content="CustPMUname: " HorizontalAlignment="Left" ToolTip="{Binding ToolTip}"/>
            <TextBox Width="150" Height="22" Text="{Binding CustPMUname}" Margin="0,0,20,0"/>
            <Image Source="../Images/Asterisk.png" Height="8" Width="8" VerticalAlignment="Top" IsEnabled="{Binding IsRequired}" Margin="0,5,0,0" HorizontalAlignment="Right">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Label Margin="2,2,2,2" Content="CustNames: "/>
            <TextBox Width="150" Height="22" Text="{Binding OutputInputMappingPair[0].Key.SignalName}" Margin="0,0,20,0"/>
        </StackPanel>
        <ContentControl Content="{Binding OutputInputMappingPair[0]}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding OutputInputMappingPair[0].Value.Count}" Value="0">
                            <Setter Property="ContentTemplate" Value="{StaticResource OptionButtons}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OutputInputMappingPair[0].Value.Count}" Value="2">
                            <Setter Property="ContentTemplate" Value="{StaticResource PhasorToPower}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OutputInputMappingPair[0].Value.Count}" Value="4">
                            <Setter Property="ContentTemplate" Value="{StaticResource VIToPower}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </StackPanel>
</UserControl>
